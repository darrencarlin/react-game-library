{"version":3,"sources":["components/Sidebar.js","components/Main.js","components/AddGame.js","helpers.js","components/EditGame.js","components/ViewGame.js","App.js","serviceWorker.js","index.js"],"names":["GameList","state","currentElement","previousElement","e","this","target","className","setState","_this2","_this$props","props","games","renderGame","react_default","a","createElement","react","map","game","index","key","onClick","handleCLick","Name","Component","Sidebar","_ref","searchLibrary","deleteGame","onChange","event","type","placeholder","Sidebar_GameList","Controls","addGameView","editGameView","title","id","Main","_ref2","children","Main_Controls","AddGame","handleChange","_e$target","name","value","_this","Object","defineProperty","handleGame","data","ID","parseInt","reduce","max","curr","Description","PlayersMin","PlayersMax","Age","PlayTime","PlayTimeMin","GameType","Type","split","Difficulty","Image","addGame","_this$props$game","Players","htmlFor","defaultValue","join","selected","defaultProps","EditGame","updatedGame","objectSpread","currentTarget","editGame","ViewGame","_ref$game","count","concat","src","alt","App","currentView","filteredGames","filter","toLowerCase","search","renderView","view","components_ViewGame","length","components_EditGame","newGame","components_AddGame","console","log","push","formattedGame","i","components_Sidebar","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5ac5193.chunk.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\n\nclass GameList extends Component {\n  state = {\n    currentElement: \"\",\n    previousElement: false\n  };\n\n  handleCLick(e) {\n    if (this.state.previousElement) {\n      e.target.className = \"active\";\n      let currentElement = this.state.currentElement;\n      currentElement.className = \"\";\n    }\n    e.target.className = \"active\";\n    this.setState({ currentElement: e.target });\n    this.setState({ previousElement: true });\n  }\n  render() {\n    const { games, renderGame } = this.props;\n    return (\n      <Fragment>\n        <ul className=\"game-list\">\n          {games.map((game, index) => (\n            <li\n              className={\n                index === 0 && !this.state.previousElement ? \"active\" : \"\"\n              }\n              key={index}\n              onClick={e => {\n                renderGame(index);\n                this.handleCLick(e);\n              }}\n            >\n              {game.Name}\n              <i className=\"fas fa-chevron-right\" />\n            </li>\n          ))}\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nconst Sidebar = ({ games, renderGame, searchLibrary, deleteGame }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>Game Library</h2>\n        <i className=\"fas fa-times fa-2x\" />\n      </div>\n      <div className=\"search\">\n        <input\n          onChange={event => searchLibrary(event)}\n          type=\"search\"\n          placeholder=\"Search Games\"\n        />\n      </div>\n      <GameList games={games} renderGame={renderGame} deleteGame={deleteGame} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Controls = ({ addGameView, editGameView, deleteGame, index }) => {\n  return (\n    <div className=\"control-box\">\n      <div className=\"controls\">\n        <div className=\"controls-buttons\">\n          <i className=\"fas fa-list-ul fa-2x\" title=\"Game List\" />\n          <i\n            className=\"far fa-plus-square fa-2x\"\n            title=\"Add Game\"\n            onClick={addGameView}\n          />\n        </div>\n      </div>\n      <div className=\"controls\">\n        <div className=\"controls-buttons\">\n          <i\n            className=\"far fa-edit fa-2x\"\n            title=\"Edit Game\"\n            onClick={editGameView}\n          />\n          <i\n            className=\"far fa-trash-alt fa-2x\"\n            title=\"Delete Game\"\n            id={index}\n            onClick={() => deleteGame(index)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Main = ({ children, editGameView, addGameView, deleteGame, index }) => {\n  return (\n    <div className=\"main\">\n      <Controls\n        editGameView={editGameView}\n        addGameView={addGameView}\n        deleteGame={deleteGame}\n        index={index}\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { getMaxID } from \"../helpers\";\n\nclass AddGame extends Component {\n  state = {};\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleGame = () => {\n    let game = {\n      ID: parseInt(getMaxID(this.props.games)),\n      Description: this.state.Description,\n      Name: this.state.Name,\n      PlayersMin: parseInt(this.state.PlayersMin),\n      PlayersMax: parseInt(this.state.PlayersMax),\n      Age: parseInt(this.state.Age),\n      PlayTime: parseInt(this.state.PlayTimeMin),\n      GameType: [this.state.Type.split(\",\")],\n      Difficulty: this.state.Difficulty || \"Easy\",\n      Image: this.state.Image\n    };\n    this.props.addGame(game);\n  };\n\n  render() {\n    const {\n      Name,\n      Description,\n      Players,\n      Age,\n      PlayTime,\n      GameType,\n      Difficulty,\n      Image\n    } = this.props.game;\n    return (\n      <div className=\"game\">\n        <h2>Add Game</h2>\n        <div className=\"field game-name\">\n          <label htmlFor=\"name\">Game Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"Name\"\n            defaultValue={Name}\n            onChange={e => this.handleChange(e)}\n          />\n        </div>\n        <div className=\"field game-description\">\n          <label htmlFor=\"description\">Game Description:</label>\n          <textarea\n            type=\"text\"\n            id=\"description\"\n            name=\"Description\"\n            defaultValue={Description}\n            onChange={e => this.handleChange(e)}\n          />\n        </div>\n        <div className=\"field game-players\">\n          <div className=\"game-players-inputs\">\n            <label htmlFor=\"playersmin\">Players (Min - Max):</label>\n            <div>\n              <input\n                name=\"PlayersMin\"\n                type=\"number\"\n                id=\"playersmin\"\n                placeholder=\"Minimum Players\"\n                defaultValue={Players[0]}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <div>\n              <input\n                name=\"PlayersMax\"\n                type=\"number\"\n                id=\"playersmax\"\n                placeholder=\"Maximum Players\"\n                defaultValue={Players[1]}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field game-age\">\n          <label htmlFor=\"age\">Age:</label>\n          <input\n            name=\"Age\"\n            type=\"number\"\n            id=\"age\"\n            placeholder=\"Numbers Only\"\n            defaultValue={Age}\n            onChange={e => this.handleChange(e)}\n          />\n        </div>\n\n        <div className=\"field game-time\">\n          <div className=\"game-players-inputs\">\n            <label htmlFor=\"timemin\">Play Time (Min):</label>\n            <div>\n              <input\n                name=\"PlayTimeMin\"\n                type=\"number\"\n                id=\"timemin\"\n                placeholder=\"Minimum Play Time\"\n                defaultValue={PlayTime[0]}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field game-type\">\n          <label htmlFor=\"type\">Type:</label>\n          <input\n            name=\"Type\"\n            type=\"text\"\n            id=\"type\"\n            placeholder=\"Separated by commas. e.g  'Board, Card, Party'\"\n            defaultValue={GameType.join(\", \")}\n            onChange={e => this.handleChange(e)}\n          />\n        </div>\n\n        <div className=\"field game-difficulty\">\n          <label htmlFor=\"difficulty\">Difficulty:</label>\n          <select\n            name=\"Difficulty\"\n            id=\"difficulty\"\n            selected={Difficulty}\n            onChange={e => this.handleChange(e)}\n          >\n            <option defaultValue=\"low\">Easy</option>\n            <option defaultValue=\"medium\">Medium</option>\n            <option defaultValue=\"hard\">Hard</option>\n          </select>\n        </div>\n\n        <div className=\"field game-image\">\n          <label htmlFor=\"image\">Image Name:</label>\n          <input\n            name=\"Image\"\n            type=\"text\"\n            id=\"image\"\n            placeholder=\"Separated by a hyphen. e.g 'exploding-kittens'\"\n            defaultValue={Image}\n            onChange={e => this.handleChange(e)}\n          />\n        </div>\n\n        <div className=\"field\">\n          <button className=\"btn\" onClick={this.handleGame}>\n            Add Game\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddGame.defaultProps = {\n  game: {\n    Name: \"\",\n    Description: \"\",\n    Players: \"\",\n    Age: \"\",\n    PlayTime: \"\",\n    GameType: [\"\"],\n    Difficulty: \"\",\n    Image: \"\"\n  }\n};\n\nexport default AddGame;\n","export function getMaxID(data) {\n  return data.reduce((max, curr) => (curr.ID > max ? curr.ID : max), 0) + 1;\n}\n","import React, { Component } from \"react\";\n\nclass EditGame extends Component {\n  handleChange = event => {\n    const updatedGame = {\n      ...this.props.game,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.editGame(updatedGame);\n  };\n\n  render() {\n    const {\n      game: {\n        Name,\n        Description,\n        PlayersMin,\n        PlayersMax,\n        Age,\n        PlayTime,\n        GameType,\n        Difficulty,\n        Image\n      }\n    } = this.props;\n    return (\n      <div className=\"game\">\n        <h2>Edit Game</h2>\n\n        <div className=\"field game-name\">\n          <label htmlFor=\"name\">Game Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"Name\"\n            defaultValue={Name}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"field game-description\">\n          <label htmlFor=\"name\">Game Description:</label>\n          <textarea\n            type=\"text\"\n            id=\"name\"\n            name=\"Description\"\n            defaultValue={Description}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"field game-players\">\n          <div className=\"game-players-inputs\">\n            <label htmlFor=\"playersmin\">Players (Min - Max):</label>\n            <div>\n              <input\n                name=\"PlayersMin\"\n                type=\"number\"\n                id=\"playersmin\"\n                placeholder=\"Minimum Players\"\n                defaultValue={PlayersMin}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <input\n                name=\"PlayersMax\"\n                type=\"number\"\n                id=\"playersmax\"\n                placeholder=\"Maximum Players\"\n                defaultValue={PlayersMax}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field game-age\">\n          <label htmlFor=\"age\">Age:</label>\n          <input\n            name=\"Age\"\n            type=\"number\"\n            id=\"age\"\n            placeholder=\"Numbers Only\"\n            defaultValue={Age}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"field game-time\">\n          <div className=\"game-players-inputs\">\n            <label htmlFor=\"time\">Play Time:</label>\n            <div>\n              <input\n                name=\"PlayTime\"\n                type=\"number\"\n                id=\"time\"\n                placeholder=\"Play Time\"\n                defaultValue={PlayTime}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field game-type\">\n          <label htmlFor=\"type\">Type:</label>\n          <input\n            name=\"GameType\"\n            type=\"text\"\n            id=\"type\"\n            placeholder=\"Separated by commas. e.g  'Board, Card, Party'\"\n            defaultValue={GameType}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"field game-difficulty\">\n          <label htmlFor=\"difficulty\">Difficulty:</label>\n          <select\n            name=\"Difficulty\"\n            id=\"difficulty\"\n            selected={Difficulty}\n            onChange={this.handleChange}\n          >\n            <option defaultValue=\"low\">Easy</option>\n            <option defaultValue=\"medium\">Medium</option>\n            <option defaultValue=\"hard\">Hard</option>\n          </select>\n        </div>\n\n        <div className=\"field game-image\">\n          <label htmlFor=\"image\">Image Name:</label>\n          <input\n            name=\"Image\"\n            type=\"text\"\n            id=\"image\"\n            placeholder=\"Separated by a hyphen. e.g 'exploding-kittens'\"\n            defaultValue={Image}\n            onChange={this.handleChange}\n          />\n        </div>\n        <small> (Changes are saved automagically)</small>\n      </div>\n    );\n  }\n}\n\nexport default EditGame;\n","import React from \"react\";\n\nconst ViewGame = ({\n  game: {\n    Name,\n    Description,\n    PlayersMin,\n    PlayersMax,\n    PlayTime,\n    Age,\n    GameType,\n    Difficulty,\n    Image\n  },\n  count\n}) => {\n  return (\n    <div className=\"game\">\n      {count > 0 ? (\n        <ul className=\"game-details\">\n          <li>\n            <span>Name:</span> {Name}\n          </li>\n          <li>\n            <span>Description:</span> {Description}\n          </li>\n          <li>\n            <span>Players:</span> {`${PlayersMin} - ${PlayersMax}`}\n          </li>\n          <li>\n            <span>Age:</span> {Age}+\n          </li>\n          <li>\n            <span>Play Time:</span>\n            {` ${PlayTime} Minutes`}\n          </li>\n          <li>\n            <span>Game Type:</span> {`${GameType}  `}\n          </li>\n          <li>\n            <span>Difficulty:</span> {Difficulty}\n          </li>\n          <li>\n            <span>Image:</span>\n          </li>\n          <li>\n            <img src={`images/${Image}.jpg`} alt=\"\" />\n          </li>\n        </ul>\n      ) : (\n        <h4>No Entries</h4>\n      )}\n    </div>\n  );\n};\n\nViewGame.defaultProps = {\n  game: {\n    Name: \"\",\n    Players: \"\",\n    Age: \"\",\n    PlayTime: \"\",\n    GameType: [\"\"],\n    Difficulty: \"\",\n    Image: \"\",\n    ID: 0\n  }\n};\n\nexport default ViewGame;\n","import React, { Component, Fragment } from \"react\";\n\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main\";\nimport AddGame from \"./components/AddGame\";\nimport EditGame from \"./components/EditGame\";\nimport ViewGame from \"./components/ViewGame\";\n\nclass App extends Component {\n  state = {\n    currentView: \"viewGame\",\n    index: 0,\n    games: [\n      {\n        Name: \"Exploding Kittens\",\n        Description:\n          \"Exploding Kittens is a highly-strategic, kitty-powered version of Russian roulette. Players draw cards until someone draws an exploding kitten, at which point they explode, they are Dead, and they are out of the game -- unless that player has a defuse card, which can defuse the kitten using things like laser pointers, belly rubs, and catnip sandwiches\",\n        PlayersMin: 2,\n        PlayersMax: 5,\n        Age: 7,\n        PlayTime: 15,\n\n        GameType: [\"Card\", \"Party\"],\n        Difficulty: \"Easy\",\n        Image: \"exploding-kittens\"\n      },\n      {\n        Name: \"Pandemic\",\n        Description:\n          \"Pandemic is a cooperative board game in which players work as a team to treat infections around the world while gathering resources for cures. You and your team are the only things standing in the way of deadly diseases that threaten the world. The fate of humanity is in your hands!\",\n        PlayersMin: 2,\n        PlayersMax: 4,\n        Age: 8,\n        PlayTime: 45,\n\n        GameType: [\"Board\", \"Cooperative\", \"Card\"],\n        Difficulty: \"Medium\",\n        Image: \"pandemic\"\n      },\n      {\n        Name: \"Settlers Of Catan\",\n        Description:\n          \"The Settlers of Catan is a strategy game where players collect resources and use them to build roads, settlements and cities on their way to victory. The board itself is variable, making each game a little different from the next. Each round of The Settlers of Catan is intended to keep three or four players ages 10 and above engaged for up to 90 minutes.\",\n        PlayersMin: 3,\n        PlayersMax: 4,\n        Age: 10,\n        PlayTime: 60,\n        GameType: [\"Card\", \"Board\", \"Dice\"],\n        Difficulty: \"Medium\",\n        Image: \"settlers-of-catan\"\n      },\n      {\n        Name: \"Ghost Blitz\",\n        Description:\n          \"In Ghost Blitz, five wooden items sit on the table waiting to be caught: a white ghost, a green bottle, a cute grey mouse, a blue book, and a comfortable red chair. Each card in the deck shows pictures of two objects, with one or both objects colored the wrong way. With all players playing at the same time, someone reveals a card, then players grab for the 'right' object – but which object is right?\",\n        PlayersMin: 2,\n        PlayersMax: 8,\n        Age: 8,\n        PlayTime: 20,\n        GameType: [\"Card\", \"Action\", \"Dexterity\"],\n        Difficulty: \"Easy\",\n        Image: \"ghost-blitz\"\n      },\n      {\n        Name: \"Photosynthesis \",\n        Description:\n          \"Welcome to the world of Photosynthesis! Plant and shape the ever-changing forest as you cultivate your seeds and your strategy. Take your trees through their life-cycle, from seedling to full bloom to rebirth, and earn points as their leaves collect energy from the revolving sun’s rays.\",\n        PlayersMin: 2,\n        PlayersMax: 4,\n        Age: 10,\n        PlayTime: 30,\n\n        GameType: [\"Board\"],\n        Difficulty: \"Medium\",\n        Image: \"photosynthesis\"\n      }\n    ],\n    filteredGames: []\n  };\n\n  searchLibrary = event => {\n    const games = this.state.games;\n    let filteredGames = games.filter(\n      game =>\n        game.Name.toLowerCase().search(event.target.value.toLowerCase()) !== -1\n    );\n    this.setState({ filteredGames });\n  };\n\n  renderView = view => {\n    switch (view) {\n      case \"viewGame\":\n        return (\n          <ViewGame\n            game={this.state.games[this.state.index]}\n            count={this.state.games.length}\n          />\n        );\n      case \"editGame\":\n        return (\n          <EditGame\n            games={this.state.games}\n            game={this.state.games[this.state.index]}\n            newGame={this.newGame}\n            editGame={this.editGame}\n          />\n        );\n      case \"newGame\":\n        return (\n          <AddGame\n            games={this.state.games}\n            newGame={this.newGame}\n            addGame={this.addGame}\n          />\n        );\n      default:\n        return <ViewGame game={this.state.games[this.state.index]} />;\n    }\n  };\n\n  // Render Game View\n\n  renderGame = index => {\n    this.setState({ currentView: \"viewGame\" });\n    this.setState({ index: index });\n  };\n\n  // Render Add New Game View\n\n  addGameView = () => {\n    this.setState({ currentView: \"newGame\" });\n  };\n\n  // Render Edit Game View\n\n  editGameView = () => {\n    this.setState({ currentView: \"editGame\" });\n  };\n\n  // Add a new game to state\n\n  addGame = game => {\n    console.log(game);\n    const games = this.state.games;\n    games.push(game);\n    this.setState({ games });\n  };\n\n  editGame = game => {\n    const formattedGame = {\n      Name: game.Name,\n      Description: game.Description,\n      PlayersMin: game.PlayersMin,\n      PlayersMax: game.PlayersMax,\n      Age: game.Age,\n      PlayTime: game.PlayTime,\n      GameType: game.GameType,\n      Difficulty: game.Difficulty,\n      Image: game.Image\n    };\n    const games = this.state.games;\n    games[this.state.index] = formattedGame;\n    this.setState({ games });\n  };\n\n  // Delete currently viewed game from state\n\n  deleteGame = index => {\n    if (index === this.state.games.length) {\n    }\n    const games = this.state.games;\n    this.setState({\n      games: games.filter((game, i) => {\n        return i !== index;\n      })\n    });\n    this.setState({ index: 0 });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Sidebar\n          games={\n            this.state.filteredGames.length > 0\n              ? this.state.filteredGames\n              : this.state.games\n          }\n          renderGame={this.renderGame}\n          searchLibrary={this.searchLibrary}\n        />\n        <Main\n          editGameView={this.editGameView}\n          addGameView={this.addGameView}\n          deleteGame={this.deleteGame}\n          index={this.state.index}\n        >\n          {this.renderView(this.state.currentView)}\n        </Main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}